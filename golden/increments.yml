source: |-
  (progn (setq a 1) (setq a (+ a 1)) (print_int a))
input: |-
  foo
code: |-
  {
      "memory": [
          {
              "opcode": "JMP",
              "arg": {
                  "value": 513,
                  "type": "ADDRESS"
              },
              "address": 0
          },
          {
              "opcode": "LD",
              "arg": {
                  "value": 1,
                  "type": "DIRECT"
              },
              "address": 513
          },
          {
              "opcode": "PUSH",
              "address": 514
          },
          {
              "opcode": "ST",
              "arg": {
                  "value": 1,
                  "type": "STACK_OFFSET"
              },
              "address": 515
          },
          {
              "opcode": "LD",
              "arg": {
                  "value": 1,
                  "type": "STACK_OFFSET"
              },
              "address": 516
          },
          {
              "opcode": "PUSH",
              "address": 517
          },
          {
              "opcode": "ST",
              "arg": {
                  "value": 1,
                  "type": "STACK_OFFSET"
              },
              "address": 518
          },
          {
              "opcode": "LD",
              "arg": {
                  "value": 1,
                  "type": "DIRECT"
              },
              "address": 519
          },
          {
              "opcode": "ADD",
              "arg": {
                  "value": 1,
                  "type": "STACK_OFFSET"
              },
              "address": 520
          },
          {
              "opcode": "PUSH",
              "address": 521
          },
          {
              "opcode": "ST",
              "arg": {
                  "value": 1,
                  "type": "STACK_OFFSET"
              },
              "address": 522
          },
          {
              "opcode": "LD",
              "arg": {
                  "value": 1,
                  "type": "STACK_OFFSET"
              },
              "address": 523
          },
          {
              "opcode": "ADD",
              "arg": {
                  "value": 48,
                  "type": "DIRECT"
              },
              "address": 524
          },
          {
              "opcode": "OUT",
              "address": 525
          },
          {
              "opcode": "HLT",
              "address": 526
          }
      ]
  }

output: |
  source LoC: 1 code instr: 15
  ============================================================
  2
  instructions_n: 15 ticks: 39

log: |
  DEBUG   machine:simulation    TICK: 0, IP: 0, DR: 0, SP: 699, AR: 0, AC: 0, Z: True, INSTR: None
  DEBUG   machine:simulation    TICK: 1, IP: 0, DR: 513, SP: 699, AR: 0, AC: 0, Z: True, INSTR: Operation(opcode=<Opcode.JMP: 'JMP'>, arg=Arg(value=513, type=<ArgType.ADDRESS: 'ADDRESS'>))
  DEBUG   machine:simulation    TICK: 1, IP: 0, DR: 513, SP: 699, AR: 0, AC: 0, Z: True, INSTR: Operation(opcode=<Opcode.JMP: 'JMP'>, arg=Arg(value=513, type=<ArgType.ADDRESS: 'ADDRESS'>))
  DEBUG   machine:simulation    TICK: 2, IP: 513, DR: 513, SP: 699, AR: 0, AC: 0, Z: True, INSTR: Operation(opcode=<Opcode.JMP: 'JMP'>, arg=Arg(value=513, type=<ArgType.ADDRESS: 'ADDRESS'>))
  DEBUG   machine:simulation    TICK: 3, IP: 513, DR: 1, SP: 699, AR: 513, AC: 0, Z: True, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 3, IP: 513, DR: 1, SP: 699, AR: 513, AC: 0, Z: True, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 4, IP: 514, DR: 1, SP: 699, AR: 513, AC: 1, Z: True, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 5, IP: 514, DR: 1, SP: 699, AR: 514, AC: 1, Z: True, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 5, IP: 514, DR: 1, SP: 699, AR: 514, AC: 1, Z: True, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 6, IP: 515, DR: 1, SP: 698, AR: 699, AC: 1, Z: True, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 7, IP: 515, DR: 1, SP: 698, AR: 515, AC: 1, Z: True, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 8, IP: 515, DR: 699, SP: 698, AR: 515, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 9, IP: 516, DR: 699, SP: 698, AR: 699, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 10, IP: 516, DR: 1, SP: 698, AR: 516, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 11, IP: 516, DR: 699, SP: 698, AR: 516, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 12, IP: 516, DR: 1, SP: 698, AR: 699, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 13, IP: 517, DR: 1, SP: 698, AR: 699, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 14, IP: 517, DR: 1, SP: 698, AR: 517, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 14, IP: 517, DR: 1, SP: 698, AR: 517, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 15, IP: 518, DR: 1, SP: 697, AR: 698, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 16, IP: 518, DR: 1, SP: 697, AR: 518, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 17, IP: 518, DR: 698, SP: 697, AR: 518, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 18, IP: 519, DR: 698, SP: 697, AR: 698, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 19, IP: 519, DR: 1, SP: 697, AR: 519, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 19, IP: 519, DR: 1, SP: 697, AR: 519, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 20, IP: 520, DR: 1, SP: 697, AR: 519, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 21, IP: 520, DR: 1, SP: 697, AR: 520, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 22, IP: 520, DR: 698, SP: 697, AR: 520, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 23, IP: 520, DR: 1, SP: 697, AR: 698, AC: 1, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 24, IP: 521, DR: 1, SP: 697, AR: 698, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 25, IP: 521, DR: 1, SP: 697, AR: 521, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 25, IP: 521, DR: 1, SP: 697, AR: 521, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 26, IP: 522, DR: 1, SP: 696, AR: 697, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.PUSH: 'PUSH'>, arg=None)
  DEBUG   machine:simulation    TICK: 27, IP: 522, DR: 1, SP: 696, AR: 522, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 28, IP: 522, DR: 697, SP: 696, AR: 522, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 29, IP: 523, DR: 697, SP: 696, AR: 697, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.ST: 'ST'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 30, IP: 523, DR: 1, SP: 696, AR: 523, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 31, IP: 523, DR: 697, SP: 696, AR: 523, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 32, IP: 523, DR: 2, SP: 696, AR: 697, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 33, IP: 524, DR: 2, SP: 696, AR: 697, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.LD: 'LD'>, arg=Arg(value=1, type=<ArgType.STACK_OFFSET: 'STACK_OFFSET'>))
  DEBUG   machine:simulation    TICK: 34, IP: 524, DR: 48, SP: 696, AR: 524, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=48, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 34, IP: 524, DR: 48, SP: 696, AR: 524, AC: 2, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=48, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 35, IP: 525, DR: 48, SP: 696, AR: 524, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.ADD: 'ADD'>, arg=Arg(value=48, type=<ArgType.DIRECT: 'DIRECT'>))
  DEBUG   machine:simulation    TICK: 36, IP: 525, DR: 48, SP: 696, AR: 525, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.OUT: 'OUT'>, arg=None)
  DEBUG   machine:simulation    TICK: 36, IP: 525, DR: 48, SP: 696, AR: 525, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.OUT: 'OUT'>, arg=None)
  DEBUG   machine:latch_out     OUT: 50 - "2"
  DEBUG   machine:simulation    TICK: 37, IP: 526, DR: 48, SP: 696, AR: 525, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.OUT: 'OUT'>, arg=None)
  DEBUG   machine:simulation    TICK: 38, IP: 526, DR: 48, SP: 696, AR: 526, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.HLT: 'HLT'>, arg=None)
  DEBUG   machine:simulation    TICK: 38, IP: 526, DR: 48, SP: 696, AR: 526, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.HLT: 'HLT'>, arg=None)
  DEBUG   machine:simulation    TICK: 39, IP: 527, DR: 48, SP: 696, AR: 526, AC: 50, Z: False, INSTR: Operation(opcode=<Opcode.HLT: 'HLT'>, arg=None)
